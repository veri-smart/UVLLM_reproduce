$date
	Wed Jul 23 22:24:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_mux_4to1_case $end
$var wire 4 ! out_ref [3:0] $end
$var wire 4 " out_dut [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 4 % c [3:0] $end
$var reg 4 & d [3:0] $end
$var reg 2 ' sel [1:0] $end
$var integer 32 ( error_count [31:0] $end
$var integer 32 ) log_file [31:0] $end
$scope module dut $end
$var wire 4 * a [3:0] $end
$var wire 4 + b [3:0] $end
$var wire 4 , c [3:0] $end
$var wire 4 - d [3:0] $end
$var wire 2 . sel [1:0] $end
$var reg 4 / out [3:0] $end
$upscope $end
$scope module ref_model $end
$var wire 4 0 a [3:0] $end
$var wire 4 1 b [3:0] $end
$var wire 4 2 c [3:0] $end
$var wire 4 3 d [3:0] $end
$var wire 2 4 sel [1:0] $end
$var reg 4 5 out [3:0] $end
$upscope $end
$scope task apply_test $end
$var reg 4 6 a_in [3:0] $end
$var reg 4 7 b_in [3:0] $end
$var reg 4 8 c_in [3:0] $end
$var reg 4 9 d_in [3:0] $end
$var reg 2 : sel_in [1:0] $end
$var reg 640 ; test_name [640:1] $end
$upscope $end
$scope task check_results $end
$var reg 640 < test_name [640:1] $end
$upscope $end
$scope task verify_results $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx <
b101001101100101011011000110010101100011011101000010000001000001 ;
b0 :
b1101 9
b1100 8
b1011 7
b1010 6
b1010 5
b0 4
b1101 3
b1100 2
b1011 1
b1010 0
b1010 /
b0 .
b1101 -
b1100 ,
b1011 +
b1010 *
b10000000000000000000000000000011 )
b0 (
b0 '
b1101 &
b1100 %
b1011 $
b1010 #
b1010 "
b1010 !
$end
#1000
b1011 "
b1011 /
b1011 !
b1011 5
b1 '
b1 .
b1 4
b101001101100101011011000110010101100011011101000010000001000010 ;
b1 :
b101001101100101011011000110010101100011011101000010000001000001 <
#2000
b1100 !
b1100 5
b1100 "
b1100 /
b10 '
b10 .
b10 4
b101001101100101011011000110010101100011011101000010000001000011 ;
b10 :
b101001101100101011011000110010101100011011101000010000001000010 <
#3000
b1101 "
b1101 /
b1101 !
b1101 5
b11 '
b11 .
b11 4
b101001101100101011011000110010101100011011101000010000001000100 ;
b11 :
b101001101100101011011000110010101100011011101000010000001000011 <
#4000
b1 !
b1 5
b1 "
b1 /
b1 '
b1 .
b1 4
b11 &
b11 -
b11 3
b1001 %
b1001 ,
b1001 2
b1 $
b1 +
b1 1
b100 #
b100 *
b100 0
b101001001100001011011100110010001101111011011010010000001010100011001010111001101110100 ;
b1 :
b11 9
b1001 8
b1 7
b100 6
b101001101100101011011000110010101100011011101000010000001000100 <
#5000
b101 "
b101 /
b101 !
b101 5
b1 &
b1 -
b1 3
b10 %
b10 ,
b10 2
b101 $
b101 +
b101 1
b1101 #
b1101 *
b1101 0
b1 9
b10 8
b101 7
b1101 6
b101001001100001011011100110010001101111011011010010000001010100011001010111001101110100 <
#6000
b1101 !
b1101 5
b1101 "
b1101 /
b1100 &
b1100 -
b1100 3
b1101 %
b1101 ,
b1101 2
b1101 $
b1101 +
b1101 1
b110 #
b110 *
b110 0
b1100 9
b1101 8
b1101 7
b110 6
#7000
b101 "
b101 /
b101 !
b101 5
b11 '
b11 .
b11 4
b101 &
b101 -
b101 3
b1010 %
b1010 ,
b1010 2
b101 $
b101 +
b101 1
b11 :
b101 9
b1010 8
b101 7
#8000
b10 !
b10 5
b10 "
b10 /
b0 '
b0 .
b0 4
b1110 &
b1110 -
b1110 3
b10 %
b10 ,
b10 2
b1111 $
b1111 +
b1111 1
b10 #
b10 *
b10 0
b0 :
b1110 9
b10 8
b1111 7
b10 6
#9000
b1100 "
b1100 /
b1100 !
b1100 5
b1 '
b1 .
b1 4
b1101 &
b1101 -
b1101 3
b1101 %
b1101 ,
b1101 2
b1100 $
b1100 +
b1100 1
b101 #
b101 *
b101 0
b1 :
b1101 9
b1101 8
b1100 7
b101 6
#10000
b0 !
b0 5
b0 "
b0 /
b10 '
b10 .
b10 4
b0 &
b0 -
b0 3
b0 %
b0 ,
b0 2
b1010 $
b1010 +
b1010 1
b11 #
b11 *
b11 0
b10 :
b0 9
b0 8
b1010 7
b11 6
#11000
b1101 "
b1101 /
b1101 !
b1101 5
b11 '
b11 .
b11 4
b1101 &
b1101 -
b1101 3
b11 %
b11 ,
b11 2
b110 $
b110 +
b110 1
b1101 #
b1101 *
b1101 0
b11 :
b1101 9
b11 8
b110 7
b1101 6
#12000
b101 !
b101 5
b101 "
b101 /
b1 '
b1 .
b1 4
b1110 &
b1110 -
b1110 3
b10 %
b10 ,
b10 2
b101 $
b101 +
b101 1
b1011 #
b1011 *
b1011 0
b1 :
b1110 9
b10 8
b101 7
b1011 6
#13000
b1111 "
b1111 /
b1111 !
b1111 5
b0 '
b0 .
b0 4
b1010 &
b1010 -
b1010 3
b1010 %
b1010 ,
b1010 2
b11 $
b11 +
b11 1
b1111 #
b1111 *
b1111 0
b0 :
b1010 9
b1010 8
b11 7
b1111 6
#14000
b10 !
b10 5
b10 "
b10 /
b1000 &
b1000 -
b1000 3
b1 %
b1 ,
b1 2
b1010 $
b1010 +
b1010 1
b10 #
b10 *
b10 0
b1000 9
b1 8
b1010 7
b10 6
#15000
b110 "
b110 /
b110 !
b110 5
b10 '
b10 .
b10 4
b110 &
b110 -
b110 3
b110 %
b110 ,
b110 2
b1011 $
b1011 +
b1011 1
b1001 #
b1001 *
b1001 0
b10 :
b110 9
b110 8
b1011 7
b1001 6
#16000
b1010 !
b1010 5
b1010 "
b1010 /
b1 '
b1 .
b1 4
b1 &
b1 -
b1 3
b1011 %
b1011 ,
b1011 2
b1010 $
b1010 +
b1010 1
b1100 #
b1100 *
b1100 0
b1 :
b1 9
b1011 8
b1010 7
b1100 6
#17000
b1011 "
b1011 /
b1011 !
b1011 5
b1110 &
b1110 -
b1110 3
b1010 %
b1010 ,
b1010 2
b1011 $
b1011 +
b1011 1
b1111 #
b1111 *
b1111 0
b1110 9
b1010 8
b1011 7
b1111 6
#18000
b1100 !
b1100 5
b1100 "
b1100 /
b11 '
b11 .
b11 4
b1100 &
b1100 -
b1100 3
b10 %
b10 ,
b10 2
b1001 $
b1001 +
b1001 1
b1 #
b1 *
b1 0
b11 :
b1100 9
b10 8
b1001 7
b1 6
#19000
b1111 "
b1111 /
b1111 !
b1111 5
b0 '
b0 .
b0 4
b1111 &
b1111 -
b1111 3
b111 %
b111 ,
b111 2
b1000 $
b1000 +
b1000 1
b1111 #
b1111 *
b1111 0
b0 :
b1111 9
b111 8
b1000 7
b1111 6
#20000
b0 !
b0 5
b0 "
b0 /
b11 '
b11 .
b11 4
b0 &
b0 -
b0 3
b1001 %
b1001 ,
b1001 2
b1001 $
b1001 +
b1001 1
b1011 #
b1011 *
b1011 0
b11 :
b0 9
b1001 8
b1001 7
b1011 6
#21000
b1 "
b1 /
b1 !
b1 5
b0 '
b0 .
b0 4
b10 &
b10 -
b10 3
b1100 %
b1100 ,
b1100 2
b110 $
b110 +
b110 1
b1 #
b1 *
b1 0
b0 :
b10 9
b1100 8
b110 7
b1 6
#22000
b1101 !
b1101 5
b1101 "
b1101 /
b1 '
b1 .
b1 4
b1110 &
b1110 -
b1110 3
b10 %
b10 ,
b10 2
b1101 $
b1101 +
b1101 1
b111 #
b111 *
b111 0
b1 :
b1110 9
b10 8
b1101 7
b111 6
#23000
b1001 "
b1001 /
b1001 !
b1001 5
b0 '
b0 .
b0 4
b101 &
b101 -
b101 3
b11 %
b11 ,
b11 2
b1111 $
b1111 +
b1111 1
b1001 #
b1001 *
b1001 0
b0 :
b101 9
b11 8
b1111 7
b1001 6
#24000
